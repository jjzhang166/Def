;-
	元组
-;



include "../type.def"
include "../macro/std.def"




;; 匿名结构，元组（便于函数返回多个值）

fun getTuple(Int a Int b)(
	var x add a 97
	var y add b 98
	var p Point 100 101
	var tup tuple ( ; 包含任意个数的元组
		x
		x
		p
	)
	elmset tup 1 y ; 元组元素赋值
	ret tup ; 函数返回元组
)


;; 使用返回元组

var tup getTuple 1 1

putchar tup.0
putchar tup.1

; 2 后面必须留有空格或加括号，否则会被当做小数解析错误
putchar tup.2 .x
putchar (tup.2).y



;;;;;;;;; 元组解包宏 ;;;;;;;;;;



;; 宏定义  _v 为值   _i 为循环索引

let upk(names val)(
	uvnnew _
	var uvnget _ val
	mcrfor(names)( var _v elmget uvnget _ _i )
	uvnclear
)


;; 使用解包宏

upk (upk_a upk_b upk_c) tup        ; 拆包变量
upk (upka1 upka2) (getTuple 1 2)   ; 拆包函数调用返回值
upk (upka3 upka4) (getTuple 3 4)



;- 重载函数 打印 Point
fun putchar(Point p)(
	putchar elmget p x
	putchar elmget p y
)-;


;; 使用解出的数据

putchar upk_a
putchar upk_b
; putchar upk_c ; 打印 Point

